
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASleftMENOR_IGUALCADENA_TEXTO COMILLAS DOSPUNTOS IDENTIFICADOR IGUAL LLAVE_DER LLAVE_IZQ MAS MAYOR_QUE MENOR_IGUAL NUMERO PALABRA_RESERVADA PALABRA_RESERVADA PALABRA_RESERVADA PALABRA_RESERVADA PALABRA_RESERVADA PALABRA_RESERVADA PARENTESIS_DER PARENTESIS_IZQ PUNTO PUNTO_COMAprograma : sentencia_forsentencia_for : PALABRA_RESERVADA PARENTESIS_IZQ declaracion_for PARENTESIS_DER bloquedeclaracion_for : PALABRA_RESERVADA IDENTIFICADOR IGUAL NUMERO PUNTO_COMA condicion_for PUNTO_COMA incremento_forcondicion_for : IDENTIFICADOR MENOR_IGUAL NUMEROincremento_for : IDENTIFICADOR MAS MAS\n                      | IDENTIFICADOR MASbloque : LLAVE_IZQ sentencia_imprimir LLAVE_DERsentencia_imprimir : PALABRA_RESERVADA PUNTO PALABRA_RESERVADA PUNTO PALABRA_RESERVADA PARENTESIS_IZQ expresion_concatenacion PARENTESIS_DER PUNTO_COMAexpresion_concatenacion : CADENA_TEXTO\n                               | CADENA_TEXTO MAS expresion_concatenacion\n                               | expresion_concatenacion MAS expresion_concatenacion\n                               | expresion_concatenacion MAS CADENA_TEXTO\n                               | expresion_concatenacion MAS IDENTIFICADOR\n                               | IDENTIFICADORcadena : IDENTIFICADOR\n              | cadena IDENTIFICADOR\n              | cadena MAYOR_QUE\n              | cadena MENOR_IGUAL\n              | cadena IGUAL\n              | cadena MAS\n              | cadena PUNTO\n              | cadena PUNTO_COMA\n              | cadena NUMERO\n              | '
    
_lr_action_items = {'PALABRA_RESERVADA':([0,4,11,17,23,],[3,5,14,20,27,]),'$end':([1,2,10,16,],[0,-1,-2,-7,]),'PARENTESIS_IZQ':([3,27,],[4,29,]),'IDENTIFICADOR':([5,15,22,29,35,36,],[7,18,25,33,40,33,]),'PARENTESIS_DER':([6,26,28,30,31,32,33,38,39,40,41,],[8,-3,-6,-5,34,-9,-14,-11,-9,-13,-10,]),'IGUAL':([7,],[9,]),'LLAVE_IZQ':([8,],[11,]),'NUMERO':([9,21,],[12,24,]),'PUNTO_COMA':([12,19,24,34,],[15,22,-4,37,]),'LLAVE_DER':([13,37,],[16,-8,]),'PUNTO':([14,20,],[17,23,]),'MENOR_IGUAL':([18,],[21,]),'MAS':([25,28,31,32,33,38,39,40,41,],[28,30,35,36,-14,-11,36,-13,-10,]),'CADENA_TEXTO':([29,35,36,],[32,39,32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencia_for':([0,],[2,]),'declaracion_for':([4,],[6,]),'bloque':([8,],[10,]),'sentencia_imprimir':([11,],[13,]),'condicion_for':([15,],[19,]),'incremento_for':([22,],[26,]),'expresion_concatenacion':([29,35,36,],[31,38,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencia_for','programa',1,'p_programa','yacc.py',10),
  ('sentencia_for -> PALABRA_RESERVADA PARENTESIS_IZQ declaracion_for PARENTESIS_DER bloque','sentencia_for',5,'p_sentencia_for','yacc.py',14),
  ('declaracion_for -> PALABRA_RESERVADA IDENTIFICADOR IGUAL NUMERO PUNTO_COMA condicion_for PUNTO_COMA incremento_for','declaracion_for',8,'p_declaracion_for','yacc.py',18),
  ('condicion_for -> IDENTIFICADOR MENOR_IGUAL NUMERO','condicion_for',3,'p_condicion_for','yacc.py',22),
  ('incremento_for -> IDENTIFICADOR MAS MAS','incremento_for',3,'p_incremento_for','yacc.py',26),
  ('incremento_for -> IDENTIFICADOR MAS','incremento_for',2,'p_incremento_for','yacc.py',27),
  ('bloque -> LLAVE_IZQ sentencia_imprimir LLAVE_DER','bloque',3,'p_bloque','yacc.py',35),
  ('sentencia_imprimir -> PALABRA_RESERVADA PUNTO PALABRA_RESERVADA PUNTO PALABRA_RESERVADA PARENTESIS_IZQ expresion_concatenacion PARENTESIS_DER PUNTO_COMA','sentencia_imprimir',9,'p_sentencia_imprimir','yacc.py',39),
  ('expresion_concatenacion -> CADENA_TEXTO','expresion_concatenacion',1,'p_expresion_concatenacion','yacc.py',43),
  ('expresion_concatenacion -> CADENA_TEXTO MAS expresion_concatenacion','expresion_concatenacion',3,'p_expresion_concatenacion','yacc.py',44),
  ('expresion_concatenacion -> expresion_concatenacion MAS expresion_concatenacion','expresion_concatenacion',3,'p_expresion_concatenacion','yacc.py',45),
  ('expresion_concatenacion -> expresion_concatenacion MAS CADENA_TEXTO','expresion_concatenacion',3,'p_expresion_concatenacion','yacc.py',46),
  ('expresion_concatenacion -> expresion_concatenacion MAS IDENTIFICADOR','expresion_concatenacion',3,'p_expresion_concatenacion','yacc.py',47),
  ('expresion_concatenacion -> IDENTIFICADOR','expresion_concatenacion',1,'p_expresion_concatenacion','yacc.py',48),
  ('cadena -> IDENTIFICADOR','cadena',1,'p_cadena','yacc.py',61),
  ('cadena -> cadena IDENTIFICADOR','cadena',2,'p_cadena','yacc.py',62),
  ('cadena -> cadena MAYOR_QUE','cadena',2,'p_cadena','yacc.py',63),
  ('cadena -> cadena MENOR_IGUAL','cadena',2,'p_cadena','yacc.py',64),
  ('cadena -> cadena IGUAL','cadena',2,'p_cadena','yacc.py',65),
  ('cadena -> cadena MAS','cadena',2,'p_cadena','yacc.py',66),
  ('cadena -> cadena PUNTO','cadena',2,'p_cadena','yacc.py',67),
  ('cadena -> cadena PUNTO_COMA','cadena',2,'p_cadena','yacc.py',68),
  ('cadena -> cadena NUMERO','cadena',2,'p_cadena','yacc.py',69),
  ('cadena -> <empty>','cadena',0,'p_cadena','yacc.py',70),
]
